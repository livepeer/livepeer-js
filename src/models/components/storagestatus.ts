/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Phase of the asset storage
 */
export enum Phase {
    Waiting = "waiting",
    Processing = "processing",
    Ready = "ready",
    Failed = "failed",
    Reverted = "reverted",
}

export class Tasks extends SpeakeasyBase {
    /**
     * ID of any currently running task that is exporting this
     *
     * @remarks
     * asset to IPFS.
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "pending" })
    pending?: string;

    /**
     * ID of the last task to run successfully, that created
     *
     * @remarks
     * the currently saved data.
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "last" })
    last?: string;

    /**
     * ID of the last task to fail execution.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "failed" })
    failed?: string;
}

export class StorageStatus extends SpeakeasyBase {
    /**
     * Phase of the asset storage
     */
    @SpeakeasyMetadata()
    @Expose({ name: "phase" })
    phase: Phase;

    /**
     * Current progress of the task updating the storage.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "progress" })
    progress?: number;

    /**
     * Error message if the last storage changed failed.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "errorMessage" })
    errorMessage?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "tasks" })
    @Type(() => Tasks)
    tasks: Tasks;
}
