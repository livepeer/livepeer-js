/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type SigningKey = {
    id?: string | undefined;
    /**
     * Name of the signing key
     */
    name?: string | undefined;
    /**
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    userId?: string | undefined;
    /**
     * Timestamp (in milliseconds) at which the signing-key was created
     */
    createdAt?: number | undefined;
    /**
     * Timestamp (in milliseconds) at which the signing-key was last used
     */
    lastSeen?: number | undefined;
    publicKey: string;
    /**
     * Disable the signing key to allow rotation safely
     */
    disabled?: boolean | undefined;
    /**
     * The ID of the project
     */
    projectId?: string | undefined;
};

/** @internal */
export namespace SigningKey$ {
    export const inboundSchema: z.ZodType<SigningKey, z.ZodTypeDef, unknown> = z.object({
        id: z.string().optional(),
        name: z.string().optional(),
        userId: z.string().optional(),
        createdAt: z.number().optional(),
        lastSeen: z.number().optional(),
        publicKey: z.string(),
        disabled: z.boolean().optional(),
        projectId: z.string().optional(),
    });

    export type Outbound = {
        id?: string | undefined;
        name?: string | undefined;
        userId?: string | undefined;
        createdAt?: number | undefined;
        lastSeen?: number | undefined;
        publicKey: string;
        disabled?: boolean | undefined;
        projectId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SigningKey> = z.object({
        id: z.string().optional(),
        name: z.string().optional(),
        userId: z.string().optional(),
        createdAt: z.number().optional(),
        lastSeen: z.number().optional(),
        publicKey: z.string(),
        disabled: z.boolean().optional(),
        projectId: z.string().optional(),
    });
}
