/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Expose } from "class-transformer";

export enum TypeT {
    Public = "public",
    Jwt = "jwt",
    Webhook = "webhook",
}

/**
 * Whether the playback policy for a asset or stream is public or signed
 */
export class PlaybackPolicy extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type: TypeT;

    /**
     * ID of the webhook to use for playback policy
     */
    @SpeakeasyMetadata()
    @Expose({ name: "webhookId" })
    webhookId?: string;

    /**
     * User-defined webhook context
     */
    @SpeakeasyMetadata()
    @Expose({ name: "webhookContext" })
    webhookContext?: Record<string, any>;
}
