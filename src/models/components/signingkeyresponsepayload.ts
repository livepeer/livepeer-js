/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Expose } from "class-transformer";

export class SigningKeyResponsePayload extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * Name of the signing key
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * Timestamp (in milliseconds) at which the signing-key was created
     */
    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    createdAt?: number;

    /**
     * Timestamp (in milliseconds) at which the signing-key was last used
     */
    @SpeakeasyMetadata()
    @Expose({ name: "lastSeen" })
    lastSeen?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "publicKey" })
    publicKey: string;

    /**
     * Disable the signing key to allow rotation safely
     */
    @SpeakeasyMetadata()
    @Expose({ name: "disabled" })
    disabled?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "privateKey" })
    privateKey: string;
}
