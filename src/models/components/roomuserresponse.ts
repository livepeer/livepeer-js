/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type RoomUserResponse = {
    /**
     * The ID of the user
     */
    id?: string | undefined;
    /**
     * Joining URL - use this for Livepeer's default meeting app (see the multiparticipant streaming guide for more info).
     */
    joinUrl?: string | undefined;
    /**
     * Joining JWT - this can be used if you have a custom meeting app (see the multiparticipant streaming guide for more info).
     */
    token?: string | undefined;
};

/** @internal */
export namespace RoomUserResponse$ {
    export const inboundSchema: z.ZodType<RoomUserResponse, z.ZodTypeDef, unknown> = z.object({
        id: z.string().optional(),
        joinUrl: z.string().optional(),
        token: z.string().optional(),
    });

    export type Outbound = {
        id?: string | undefined;
        joinUrl?: string | undefined;
        token?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RoomUserResponse> = z.object({
        id: z.string().optional(),
        joinUrl: z.string().optional(),
        token: z.string().optional(),
    });
}
