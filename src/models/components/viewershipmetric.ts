/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Expose } from "class-transformer";

/**
 * An individual metric about viewership of an asset. Necessarily, at least
 *
 * @remarks
 * 1 of playbackId and dStorageUrl will be present, depending on the query.
 *
 */
export class ViewershipMetric extends SpeakeasyBase {
    /**
     * The playback ID associated with the metric
     */
    @SpeakeasyMetadata()
    @Expose({ name: "playbackId" })
    playbackId?: string;

    /**
     * The ID of the creator associated with the metric
     */
    @SpeakeasyMetadata()
    @Expose({ name: "creatorId" })
    creatorId?: string;

    /**
     * The ID of the viewer associated with the metric
     */
    @SpeakeasyMetadata()
    @Expose({ name: "viewerId" })
    viewerId?: string;

    /**
     * The URL of the distributed storage used for the asset
     */
    @SpeakeasyMetadata()
    @Expose({ name: "dStorageUrl" })
    dStorageUrl?: string;

    /**
     * Timestamp (in milliseconds) when the metric was recorded. If the
     *
     * @remarks
     * query contains a time step, this timestamp will point to the
     * beginning of the time step period.
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "timestamp" })
    timestamp?: number;

    /**
     * The device used by the viewer
     */
    @SpeakeasyMetadata()
    @Expose({ name: "device" })
    device?: string;

    /**
     * The type of the device used by the viewer
     */
    @SpeakeasyMetadata()
    @Expose({ name: "deviceType" })
    deviceType?: string;

    /**
     * The CPU used by the viewer's device
     */
    @SpeakeasyMetadata()
    @Expose({ name: "cpu" })
    cpu?: string;

    /**
     * The operating system used by the viewer
     */
    @SpeakeasyMetadata()
    @Expose({ name: "os" })
    os?: string;

    /**
     * The browser used by the viewer
     */
    @SpeakeasyMetadata()
    @Expose({ name: "browser" })
    browser?: string;

    /**
     * The browser engine used by the viewer's browser
     */
    @SpeakeasyMetadata()
    @Expose({ name: "browserEngine" })
    browserEngine?: string;

    /**
     * The continent where the viewer is located
     */
    @SpeakeasyMetadata()
    @Expose({ name: "continent" })
    continent?: string;

    /**
     * The country where the viewer is located
     */
    @SpeakeasyMetadata()
    @Expose({ name: "country" })
    country?: string;

    /**
     * The subdivision (e.g., state or province) where the viewer is
     *
     * @remarks
     * located
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "subdivision" })
    subdivision?: string;

    /**
     * The timezone where the viewer is located
     */
    @SpeakeasyMetadata()
    @Expose({ name: "timezone" })
    timezone?: string;

    /**
     * Geographic encoding of the viewers location. Accurate to 3 digits.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "geohas" })
    geohas?: string;

    /**
     * The number of views for the asset
     */
    @SpeakeasyMetadata()
    @Expose({ name: "viewCount" })
    viewCount: number;

    /**
     * The total playtime in minutes for the asset
     */
    @SpeakeasyMetadata()
    @Expose({ name: "playtimeMins" })
    playtimeMins: number;

    /**
     * The time-to-first-frame (TTFF) in milliseconds
     */
    @SpeakeasyMetadata()
    @Expose({ name: "ttffMs" })
    ttffMs?: number;

    /**
     * The rebuffering ratio for the asset
     */
    @SpeakeasyMetadata()
    @Expose({ name: "rebufferRatio" })
    rebufferRatio?: number;

    /**
     * The error rate for the asset
     */
    @SpeakeasyMetadata()
    @Expose({ name: "errorRate" })
    errorRate?: number;

    /**
     * The percentage of sessions that existed before the asset started
     *
     * @remarks
     * playing
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "exitsBeforeStart" })
    exitsBeforeStart?: number;
}
