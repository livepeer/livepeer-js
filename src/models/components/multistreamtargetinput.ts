/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type MultistreamTargetInput = {
    name?: string | undefined;
    /**
     * Livepeer-compatible multistream target URL (RTMP(S) or SRT)
     */
    url: string;
    /**
     * If true then this multistream target will not be used for pushing
     *
     * @remarks
     * even if it is configured in a stream object.
     *
     */
    disabled?: boolean | undefined;
};

/** @internal */
export namespace MultistreamTargetInput$ {
    export const inboundSchema: z.ZodType<MultistreamTargetInput, z.ZodTypeDef, unknown> = z.object(
        {
            name: z.string().optional(),
            url: z.string(),
            disabled: z.boolean().optional(),
        }
    );

    export type Outbound = {
        name?: string | undefined;
        url: string;
        disabled?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MultistreamTargetInput> =
        z.object({
            name: z.string().optional(),
            url: z.string(),
            disabled: z.boolean().optional(),
        });
}
