/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * An individual metric about usage of a user.
 *
 * @remarks
 *
 */
export type UsageMetric = {
    /**
     * The user ID associated with the metric
     */
    userID: string;
    /**
     * The creator ID associated with the metric
     */
    creatorID: string;
    /**
     * Total minutes of delivery usage.
     */
    deliveryUsageMins: number;
    /**
     * Total transcoded minutes.
     */
    totalUsageMins: number;
    /**
     * Total minutes of storage usage.
     */
    storageUsageMins: number;
};

/** @internal */
export namespace UsageMetric$ {
    export type Inbound = {
        UserID: string;
        CreatorID: string;
        DeliveryUsageMins: number;
        TotalUsageMins: number;
        StorageUsageMins: number;
    };

    export const inboundSchema: z.ZodType<UsageMetric, z.ZodTypeDef, Inbound> = z
        .object({
            UserID: z.string(),
            CreatorID: z.string(),
            DeliveryUsageMins: z.number(),
            TotalUsageMins: z.number(),
            StorageUsageMins: z.number(),
        })
        .transform((v) => {
            return {
                userID: v.UserID,
                creatorID: v.CreatorID,
                deliveryUsageMins: v.DeliveryUsageMins,
                totalUsageMins: v.TotalUsageMins,
                storageUsageMins: v.StorageUsageMins,
            };
        });

    export type Outbound = {
        UserID: string;
        CreatorID: string;
        DeliveryUsageMins: number;
        TotalUsageMins: number;
        StorageUsageMins: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UsageMetric> = z
        .object({
            userID: z.string(),
            creatorID: z.string(),
            deliveryUsageMins: z.number(),
            totalUsageMins: z.number(),
            storageUsageMins: z.number(),
        })
        .transform((v) => {
            return {
                UserID: v.userID,
                CreatorID: v.creatorID,
                DeliveryUsageMins: v.deliveryUsageMins,
                TotalUsageMins: v.totalUsageMins,
                StorageUsageMins: v.storageUsageMins,
            };
        });
}
