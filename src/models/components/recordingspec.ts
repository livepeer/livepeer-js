/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  TranscodeProfile,
  TranscodeProfile$inboundSchema,
  TranscodeProfile$Outbound,
  TranscodeProfile$outboundSchema,
} from "./transcodeprofile.js";

export type RecordingSpec = {
  profiles?: Array<TranscodeProfile> | null | undefined;
};

/** @internal */
export const RecordingSpec$inboundSchema: z.ZodType<
  RecordingSpec,
  z.ZodTypeDef,
  unknown
> = z.object({
  profiles: z.nullable(z.array(TranscodeProfile$inboundSchema)).optional(),
});

/** @internal */
export type RecordingSpec$Outbound = {
  profiles?: Array<TranscodeProfile$Outbound> | null | undefined;
};

/** @internal */
export const RecordingSpec$outboundSchema: z.ZodType<
  RecordingSpec$Outbound,
  z.ZodTypeDef,
  RecordingSpec
> = z.object({
  profiles: z.nullable(z.array(TranscodeProfile$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecordingSpec$ {
  /** @deprecated use `RecordingSpec$inboundSchema` instead. */
  export const inboundSchema = RecordingSpec$inboundSchema;
  /** @deprecated use `RecordingSpec$outboundSchema` instead. */
  export const outboundSchema = RecordingSpec$outboundSchema;
  /** @deprecated use `RecordingSpec$Outbound` instead. */
  export type Outbound = RecordingSpec$Outbound;
}
