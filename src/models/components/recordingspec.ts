/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { FfmpegProfile, FfmpegProfile$ } from "./ffmpegprofile";
import * as z from "zod";

/**
 * Configuration for recording the stream. This can only be set if
 *
 * @remarks
 * `record` is true.
 *
 */
export type RecordingSpec = {
    /**
     * Profiles to record the stream in. If not specified, the stream
     *
     * @remarks
     * will be recorded in the same profiles as the stream itself. Keep
     * in mind that the source rendition will always be recorded.
     *
     */
    profiles?: Array<FfmpegProfile> | undefined;
};

/** @internal */
export namespace RecordingSpec$ {
    export const inboundSchema: z.ZodType<RecordingSpec, z.ZodTypeDef, unknown> = z.object({
        profiles: z.array(FfmpegProfile$.inboundSchema).optional(),
    });

    export type Outbound = {
        profiles?: Array<FfmpegProfile$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RecordingSpec> = z.object({
        profiles: z.array(FfmpegProfile$.outboundSchema).optional(),
    });
}
