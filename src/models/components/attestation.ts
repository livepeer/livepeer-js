/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { StorageStatus } from "./storagestatus";
import { Expose, Type } from "class-transformer";

/**
 * Video Metadata EIP-712 primaryType
 */
export enum PrimaryType {
    VideoAttestation = "VideoAttestation",
}

export enum Name {
    VerifiableVideo = "Verifiable Video",
}

export enum Version {
    One = "1",
}

/**
 * Video Metadata EIP-712 domain
 */
export class Domain extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: Name;

    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version: Version;
}

export class Attestations extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "role" })
    role: string;

    @SpeakeasyMetadata()
    @Expose({ name: "address" })
    address: string;
}

/**
 * Video Metadata EIP-712 message content
 */
export class Message extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "video" })
    video: string;

    @SpeakeasyMetadata({ elemType: Attestations })
    @Expose({ name: "attestations" })
    @Type(() => Attestations)
    attestations: Attestations[];

    @SpeakeasyMetadata()
    @Expose({ name: "signer" })
    signer: string;

    @SpeakeasyMetadata()
    @Expose({ name: "timestamp" })
    timestamp: number;
}

export enum SignatureType {
    Eip712 = "eip712",
    Flow = "flow",
}

export class AttestationIpfs extends SpeakeasyBase {
    /**
     * CID of the file on IPFS
     */
    @SpeakeasyMetadata()
    @Expose({ name: "cid" })
    cid?: string;

    /**
     * URL with IPFS scheme for the file
     */
    @SpeakeasyMetadata()
    @Expose({ name: "url" })
    url?: string;

    /**
     * URL to access file via HTTP through an IPFS gateway
     */
    @SpeakeasyMetadata()
    @Expose({ name: "gatewayUrl" })
    gatewayUrl?: string;

    /**
     * Timestamp (in milliseconds) at which IPFS export task was updated
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "updatedAt" })
    updatedAt?: number;
}

export class AttestationStorage extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "ipfs" })
    @Type(() => AttestationIpfs)
    ipfs?: AttestationIpfs;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    @Type(() => StorageStatus)
    status?: StorageStatus;
}

export class Attestation extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * Video Metadata EIP-712 primaryType
     */
    @SpeakeasyMetadata()
    @Expose({ name: "primaryType" })
    primaryType: PrimaryType;

    /**
     * Video Metadata EIP-712 domain
     */
    @SpeakeasyMetadata()
    @Expose({ name: "domain" })
    @Type(() => Domain)
    domain: Domain;

    /**
     * Video Metadata EIP-712 message content
     */
    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    @Type(() => Message)
    message: Message;

    /**
     * Video Metadata EIP-712 message signature
     */
    @SpeakeasyMetadata()
    @Expose({ name: "signature" })
    signature: string;

    /**
     * Timestamp (in milliseconds) at which the object was created
     */
    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    createdAt?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "signatureType" })
    signatureType?: SignatureType;

    @SpeakeasyMetadata()
    @Expose({ name: "storage" })
    @Type(() => AttestationStorage)
    storage?: AttestationStorage;
}
