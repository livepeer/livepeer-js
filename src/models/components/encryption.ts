/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type Encryption = {
    /**
     * Encryption key used to encrypt the asset. Only writable in the upload asset endpoints and cannot be retrieved back.
     */
    encryptedKey: string;
};

/** @internal */
export namespace Encryption$ {
    export type Inbound = {
        encryptedKey: string;
    };

    export const inboundSchema: z.ZodType<Encryption, z.ZodTypeDef, Inbound> = z
        .object({
            encryptedKey: z.string(),
        })
        .transform((v) => {
            return {
                encryptedKey: v.encryptedKey,
            };
        });

    export type Outbound = {
        encryptedKey: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Encryption> = z
        .object({
            encryptedKey: z.string(),
        })
        .transform((v) => {
            return {
                encryptedKey: v.encryptedKey,
            };
        });
}
