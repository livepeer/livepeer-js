/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Expose } from "class-transformer";

export enum TranscodeProfileProfile {
    H264Baseline = "H264Baseline",
    H264Main = "H264Main",
    H264High = "H264High",
    H264ConstrainedHigh = "H264ConstrainedHigh",
}

export enum TranscodeProfileEncoder {
    H264 = "h264",
    Hevc = "hevc",
    Vp8 = "vp8",
    Vp9 = "vp9",
}

/**
 * Transcode API profile
 */
export class TranscodeProfile extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "width" })
    width?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "height" })
    height?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "bitrate" })
    bitrate: number;

    /**
     * Restricts the size of the output video using the constant quality feature. Increasing this value will result in a lower quality video. Note that this parameter might not work if the transcoder lacks support for it.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "quality" })
    quality?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "fps" })
    fps?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "fpsDen" })
    fpsDen?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "gop" })
    gop?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "profile" })
    profile?: TranscodeProfileProfile;

    @SpeakeasyMetadata()
    @Expose({ name: "encoder" })
    encoder?: TranscodeProfileEncoder;
}
