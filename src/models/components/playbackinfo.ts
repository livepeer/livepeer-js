/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Attestation } from "./attestation";
import { PlaybackPolicy } from "./playbackpolicy";
import { Expose, Type } from "class-transformer";

export enum PlaybackInfoType {
    Live = "live",
    Vod = "vod",
    Recording = "recording",
}

export enum Hrn {
    HlsTs = "HLS (TS)",
    Mp4 = "MP4",
    WebRTCH264 = "WebRTC (H264)",
}

export enum PlaybackInfoSchemasType {
    Html5ApplicationVndAppleMpegurl = "html5/application/vnd.apple.mpegurl",
    Html5VideoMp4 = "html5/video/mp4",
    Html5VideoH264 = "html5/video/h264",
}

export class Source extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "hrn" })
    hrn: Hrn;

    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type: PlaybackInfoSchemasType;

    @SpeakeasyMetadata()
    @Expose({ name: "url" })
    url: string;

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "width" })
    width?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "height" })
    height?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "bitrate" })
    bitrate?: number;
}

export class Meta extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "live" })
    live?: number;

    /**
     * Whether the playback policy for a asset or stream is public or signed
     */
    @SpeakeasyMetadata()
    @Expose({ name: "playbackPolicy" })
    @Type(() => PlaybackPolicy)
    playbackPolicy?: PlaybackPolicy;

    @SpeakeasyMetadata({ elemType: Source })
    @Expose({ name: "source" })
    @Type(() => Source)
    source: Source[];

    @SpeakeasyMetadata()
    @Expose({ name: "attestation" })
    @Type(() => Attestation)
    attestation?: Attestation;
}

export class PlaybackInfo extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type: PlaybackInfoType;

    @SpeakeasyMetadata()
    @Expose({ name: "meta" })
    @Type(() => Meta)
    meta: Meta;
}
