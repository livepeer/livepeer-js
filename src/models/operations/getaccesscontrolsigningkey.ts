/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../../models/components";
import * as errors from "../../models/errors";
import { z } from "zod";

export type GetAccessControlSigningKeyResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Success
     */
    signingKeys?: Array<components.SigningKey> | undefined;
    /**
     * Error
     */
    error?: errors.ErrorT | undefined;
};

/** @internal */
export namespace GetAccessControlSigningKeyResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        "signing-keys"?: Array<components.SigningKey$.Inbound> | undefined;
        error?: errors.ErrorT$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<
        GetAccessControlSigningKeyResponse,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            "signing-keys": z.array(components.SigningKey$.inboundSchema).optional(),
            error: errors.ErrorT$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v["signing-keys"] === undefined ? null : { signingKeys: v["signing-keys"] }),
                ...(v.error === undefined ? null : { error: v.error }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        "signing-keys"?: Array<components.SigningKey$.Outbound> | undefined;
        error?: errors.ErrorT$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetAccessControlSigningKeyResponse
    > = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            signingKeys: z.array(components.SigningKey$.outboundSchema).optional(),
            error: errors.ErrorT$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.signingKeys === undefined ? null : { "signing-keys": v.signingKeys }),
                ...(v.error === undefined ? null : { error: v.error }),
            };
        });
}
