/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import * as components from "../../models/components";
import { AxiosResponse } from "axios";

export class GetRecordedSessionsRequest extends SpeakeasyBase {
    /**
     * ID of the parent stream
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=parentId" })
    parentId: string;

    /**
     * Flag indicating if the response should only include recorded
     *
     * @remarks
     * sessions
     *
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=record" })
    record?: number;
}

export class GetRecordedSessionsResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * Success
     */
    @SpeakeasyMetadata({ elemType: components.Session })
    classes?: components.Session[];
}
