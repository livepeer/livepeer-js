/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../../models/components";
import * as errors from "../../models/errors";
import { z } from "zod";

export type PatchAssetAssetIdRequest = {
    /**
     * ID of the asset
     */
    assetId: string;
    assetPatchPayload: components.AssetPatchPayload;
};

export type PatchAssetAssetIdResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Success
     */
    asset?: components.Asset | undefined;
    /**
     * Error
     */
    error?: errors.ErrorT | undefined;
};

/** @internal */
export namespace PatchAssetAssetIdRequest$ {
    export type Inbound = {
        assetId: string;
        "asset-patch-payload": components.AssetPatchPayload$.Inbound;
    };

    export const inboundSchema: z.ZodType<PatchAssetAssetIdRequest, z.ZodTypeDef, Inbound> = z
        .object({
            assetId: z.string(),
            "asset-patch-payload": components.AssetPatchPayload$.inboundSchema,
        })
        .transform((v) => {
            return {
                assetId: v.assetId,
                assetPatchPayload: v["asset-patch-payload"],
            };
        });

    export type Outbound = {
        assetId: string;
        "asset-patch-payload": components.AssetPatchPayload$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PatchAssetAssetIdRequest> = z
        .object({
            assetId: z.string(),
            assetPatchPayload: components.AssetPatchPayload$.outboundSchema,
        })
        .transform((v) => {
            return {
                assetId: v.assetId,
                "asset-patch-payload": v.assetPatchPayload,
            };
        });
}

/** @internal */
export namespace PatchAssetAssetIdResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        asset?: components.Asset$.Inbound | undefined;
        error?: errors.ErrorT$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<PatchAssetAssetIdResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            asset: components.Asset$.inboundSchema.optional(),
            error: errors.ErrorT$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.asset === undefined ? null : { asset: v.asset }),
                ...(v.error === undefined ? null : { error: v.error }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        asset?: components.Asset$.Outbound | undefined;
        error?: errors.ErrorT$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PatchAssetAssetIdResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            asset: components.Asset$.outboundSchema.optional(),
            error: errors.ErrorT$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.asset === undefined ? null : { asset: v.asset }),
                ...(v.error === undefined ? null : { error: v.error }),
            };
        });
}
