/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as errors from "../errors/index.js";
import * as z from "zod";

export type GetRoomUserRequest = {
    id: string;
    userId: string;
};

export type GetRoomUserResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Success
     */
    getRoomUserResponse?: components.GetRoomUserResponse | undefined;
    /**
     * Error
     */
    error?: errors.ErrorT | undefined;
};

/** @internal */
export const GetRoomUserRequest$inboundSchema: z.ZodType<
    GetRoomUserRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    id: z.string(),
    userId: z.string(),
});

/** @internal */
export type GetRoomUserRequest$Outbound = {
    id: string;
    userId: string;
};

/** @internal */
export const GetRoomUserRequest$outboundSchema: z.ZodType<
    GetRoomUserRequest$Outbound,
    z.ZodTypeDef,
    GetRoomUserRequest
> = z.object({
    id: z.string(),
    userId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetRoomUserRequest$ {
    /** @deprecated use `GetRoomUserRequest$inboundSchema` instead. */
    export const inboundSchema = GetRoomUserRequest$inboundSchema;
    /** @deprecated use `GetRoomUserRequest$outboundSchema` instead. */
    export const outboundSchema = GetRoomUserRequest$outboundSchema;
    /** @deprecated use `GetRoomUserRequest$Outbound` instead. */
    export type Outbound = GetRoomUserRequest$Outbound;
}

/** @internal */
export const GetRoomUserResponse$inboundSchema: z.ZodType<
    GetRoomUserResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        ContentType: z.string(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
        "get-room-user-response": components.GetRoomUserResponse$inboundSchema.optional(),
        error: errors.ErrorT$inboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            ContentType: "contentType",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
            "get-room-user-response": "getRoomUserResponse",
        });
    });

/** @internal */
export type GetRoomUserResponse$Outbound = {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    "get-room-user-response"?: components.GetRoomUserResponse$Outbound | undefined;
    error?: errors.ErrorT$Outbound | undefined;
};

/** @internal */
export const GetRoomUserResponse$outboundSchema: z.ZodType<
    GetRoomUserResponse$Outbound,
    z.ZodTypeDef,
    GetRoomUserResponse
> = z
    .object({
        contentType: z.string(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
        getRoomUserResponse: components.GetRoomUserResponse$outboundSchema.optional(),
        error: errors.ErrorT$outboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            contentType: "ContentType",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
            getRoomUserResponse: "get-room-user-response",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetRoomUserResponse$ {
    /** @deprecated use `GetRoomUserResponse$inboundSchema` instead. */
    export const inboundSchema = GetRoomUserResponse$inboundSchema;
    /** @deprecated use `GetRoomUserResponse$outboundSchema` instead. */
    export const outboundSchema = GetRoomUserResponse$outboundSchema;
    /** @deprecated use `GetRoomUserResponse$Outbound` instead. */
    export type Outbound = GetRoomUserResponse$Outbound;
}
