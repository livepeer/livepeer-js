/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class GetPublicTotalViewsMetricsRequest extends SpeakeasyBase {
    /**
     * The playback ID to filter the query results. This can be a canonical
     *
     * @remarks
     * playback ID from Livepeer assets or streams, or dStorage identifiers
     * for assets
     *
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=playbackId" })
    playbackId: string;
}

/**
 * A simplified metric object about aggregate viewership of an
 *
 * @remarks
 * asset. Either playbackId or dStorageUrl will be set.
 *
 */
export class GetPublicTotalViewsMetricsResponseBody extends SpeakeasyBase {
    /**
     * The playback ID associated with the metric
     */
    @SpeakeasyMetadata()
    @Expose({ name: "playbackId" })
    playbackId?: string;

    /**
     * The URL of the distributed storage used for the asset
     */
    @SpeakeasyMetadata()
    @Expose({ name: "dStorageUrl" })
    dStorageUrl?: string;

    /**
     * The number of views for the asset
     */
    @SpeakeasyMetadata()
    @Expose({ name: "viewCount" })
    viewCount: number;

    /**
     * The total playtime in minutes for the asset
     */
    @SpeakeasyMetadata()
    @Expose({ name: "playtimeMins" })
    playtimeMins: number;
}

export class GetPublicTotalViewsMetricsResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * A single Metric object with the viewCount and playtimeMins metrics.
     */
    @SpeakeasyMetadata()
    object?: GetPublicTotalViewsMetricsResponseBody;
}
