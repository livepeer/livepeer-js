/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  HTTPError,
  HTTPError$inboundSchema,
  HTTPError$Outbound,
  HTTPError$outboundSchema,
} from "./httperror.js";
import {
  HTTPValidationError,
  HTTPValidationError$inboundSchema,
  HTTPValidationError$Outbound,
  HTTPValidationError$outboundSchema,
} from "./httpvalidationerror.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
import {
  StudioApiError,
  StudioApiError$inboundSchema,
  StudioApiError$Outbound,
  StudioApiError$outboundSchema,
} from "./studioapierror.js";

/**
 * Internal Server Error
 */
export type GenImageToVideoGenerateResponse500ResponseBody =
  | HTTPError
  | StudioApiError;

/**
 * Validation Error
 */
export type GenImageToVideoGenerateResponseResponseBody =
  | HTTPValidationError
  | StudioApiError;

/**
 * Unauthorized
 */
export type GenImageToVideoGenerateResponseBody = HTTPError | StudioApiError;

/**
 * Bad Request
 */
export type GenImageToVideoResponseBody = HTTPError | StudioApiError;

/** @internal */
export const GenImageToVideoGenerateResponse500ResponseBody$inboundSchema:
  z.ZodType<
    GenImageToVideoGenerateResponse500ResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.union([HTTPError$inboundSchema, StudioApiError$inboundSchema]);

/** @internal */
export type GenImageToVideoGenerateResponse500ResponseBody$Outbound =
  | HTTPError$Outbound
  | StudioApiError$Outbound;

/** @internal */
export const GenImageToVideoGenerateResponse500ResponseBody$outboundSchema:
  z.ZodType<
    GenImageToVideoGenerateResponse500ResponseBody$Outbound,
    z.ZodTypeDef,
    GenImageToVideoGenerateResponse500ResponseBody
  > = z.union([HTTPError$outboundSchema, StudioApiError$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenImageToVideoGenerateResponse500ResponseBody$ {
  /** @deprecated use `GenImageToVideoGenerateResponse500ResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GenImageToVideoGenerateResponse500ResponseBody$inboundSchema;
  /** @deprecated use `GenImageToVideoGenerateResponse500ResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GenImageToVideoGenerateResponse500ResponseBody$outboundSchema;
  /** @deprecated use `GenImageToVideoGenerateResponse500ResponseBody$Outbound` instead. */
  export type Outbound =
    GenImageToVideoGenerateResponse500ResponseBody$Outbound;
}

export function genImageToVideoGenerateResponse500ResponseBodyToJSON(
  genImageToVideoGenerateResponse500ResponseBody:
    GenImageToVideoGenerateResponse500ResponseBody,
): string {
  return JSON.stringify(
    GenImageToVideoGenerateResponse500ResponseBody$outboundSchema.parse(
      genImageToVideoGenerateResponse500ResponseBody,
    ),
  );
}

export function genImageToVideoGenerateResponse500ResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GenImageToVideoGenerateResponse500ResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GenImageToVideoGenerateResponse500ResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GenImageToVideoGenerateResponse500ResponseBody' from JSON`,
  );
}

/** @internal */
export const GenImageToVideoGenerateResponseResponseBody$inboundSchema:
  z.ZodType<
    GenImageToVideoGenerateResponseResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.union([
    HTTPValidationError$inboundSchema,
    StudioApiError$inboundSchema,
  ]);

/** @internal */
export type GenImageToVideoGenerateResponseResponseBody$Outbound =
  | HTTPValidationError$Outbound
  | StudioApiError$Outbound;

/** @internal */
export const GenImageToVideoGenerateResponseResponseBody$outboundSchema:
  z.ZodType<
    GenImageToVideoGenerateResponseResponseBody$Outbound,
    z.ZodTypeDef,
    GenImageToVideoGenerateResponseResponseBody
  > = z.union([
    HTTPValidationError$outboundSchema,
    StudioApiError$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenImageToVideoGenerateResponseResponseBody$ {
  /** @deprecated use `GenImageToVideoGenerateResponseResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GenImageToVideoGenerateResponseResponseBody$inboundSchema;
  /** @deprecated use `GenImageToVideoGenerateResponseResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GenImageToVideoGenerateResponseResponseBody$outboundSchema;
  /** @deprecated use `GenImageToVideoGenerateResponseResponseBody$Outbound` instead. */
  export type Outbound = GenImageToVideoGenerateResponseResponseBody$Outbound;
}

export function genImageToVideoGenerateResponseResponseBodyToJSON(
  genImageToVideoGenerateResponseResponseBody:
    GenImageToVideoGenerateResponseResponseBody,
): string {
  return JSON.stringify(
    GenImageToVideoGenerateResponseResponseBody$outboundSchema.parse(
      genImageToVideoGenerateResponseResponseBody,
    ),
  );
}

export function genImageToVideoGenerateResponseResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GenImageToVideoGenerateResponseResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GenImageToVideoGenerateResponseResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GenImageToVideoGenerateResponseResponseBody' from JSON`,
  );
}

/** @internal */
export const GenImageToVideoGenerateResponseBody$inboundSchema: z.ZodType<
  GenImageToVideoGenerateResponseBody,
  z.ZodTypeDef,
  unknown
> = z.union([HTTPError$inboundSchema, StudioApiError$inboundSchema]);

/** @internal */
export type GenImageToVideoGenerateResponseBody$Outbound =
  | HTTPError$Outbound
  | StudioApiError$Outbound;

/** @internal */
export const GenImageToVideoGenerateResponseBody$outboundSchema: z.ZodType<
  GenImageToVideoGenerateResponseBody$Outbound,
  z.ZodTypeDef,
  GenImageToVideoGenerateResponseBody
> = z.union([HTTPError$outboundSchema, StudioApiError$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenImageToVideoGenerateResponseBody$ {
  /** @deprecated use `GenImageToVideoGenerateResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GenImageToVideoGenerateResponseBody$inboundSchema;
  /** @deprecated use `GenImageToVideoGenerateResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GenImageToVideoGenerateResponseBody$outboundSchema;
  /** @deprecated use `GenImageToVideoGenerateResponseBody$Outbound` instead. */
  export type Outbound = GenImageToVideoGenerateResponseBody$Outbound;
}

export function genImageToVideoGenerateResponseBodyToJSON(
  genImageToVideoGenerateResponseBody: GenImageToVideoGenerateResponseBody,
): string {
  return JSON.stringify(
    GenImageToVideoGenerateResponseBody$outboundSchema.parse(
      genImageToVideoGenerateResponseBody,
    ),
  );
}

export function genImageToVideoGenerateResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GenImageToVideoGenerateResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GenImageToVideoGenerateResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GenImageToVideoGenerateResponseBody' from JSON`,
  );
}

/** @internal */
export const GenImageToVideoResponseBody$inboundSchema: z.ZodType<
  GenImageToVideoResponseBody,
  z.ZodTypeDef,
  unknown
> = z.union([HTTPError$inboundSchema, StudioApiError$inboundSchema]);

/** @internal */
export type GenImageToVideoResponseBody$Outbound =
  | HTTPError$Outbound
  | StudioApiError$Outbound;

/** @internal */
export const GenImageToVideoResponseBody$outboundSchema: z.ZodType<
  GenImageToVideoResponseBody$Outbound,
  z.ZodTypeDef,
  GenImageToVideoResponseBody
> = z.union([HTTPError$outboundSchema, StudioApiError$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenImageToVideoResponseBody$ {
  /** @deprecated use `GenImageToVideoResponseBody$inboundSchema` instead. */
  export const inboundSchema = GenImageToVideoResponseBody$inboundSchema;
  /** @deprecated use `GenImageToVideoResponseBody$outboundSchema` instead. */
  export const outboundSchema = GenImageToVideoResponseBody$outboundSchema;
  /** @deprecated use `GenImageToVideoResponseBody$Outbound` instead. */
  export type Outbound = GenImageToVideoResponseBody$Outbound;
}

export function genImageToVideoResponseBodyToJSON(
  genImageToVideoResponseBody: GenImageToVideoResponseBody,
): string {
  return JSON.stringify(
    GenImageToVideoResponseBody$outboundSchema.parse(
      genImageToVideoResponseBody,
    ),
  );
}

export function genImageToVideoResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GenImageToVideoResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GenImageToVideoResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GenImageToVideoResponseBody' from JSON`,
  );
}
